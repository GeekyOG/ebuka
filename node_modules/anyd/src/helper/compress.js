// para1:文件流,para2:浏览器支持什么压缩方式(req请求中的header中声明),
// para3:在res中设置header(告诉浏览器使用什么方式解压(res))
const { createGzip , createDeflate } = require( "zlib" );
// createGzip:把一个流使用Gzip方式压缩,
// createDeflate:把一个流使用deflate方式压缩
module.exports = ( rs , req , res ) => {
		const acted = req.headers[ "accept-encoding" ];// 在req.headers获取accept-encoding支持项
		if( !acted || !acted.match( /\b(gzip|deflate)\b/ ) ) return;
		if( acted.match( /\bgzip\b/ ) ) {
				res.setHeader( "Content-Encoding" , "gzip" );
				return rs.pipe( createGzip() );
		} else if( acted.match( /\bdeflate\b/ ) ) {
				res.setHeader( "Content-Encoding" , "deflate" );
				return rs.pipe( createDeflate() );
		};
};
// stringObject.match(regexp)如果没有找到任何匹配的文本,match() 将返回 null.否则,它将返回一个数组
